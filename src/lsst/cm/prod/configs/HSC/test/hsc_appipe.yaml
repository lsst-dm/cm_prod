prepare:
    class_name: lsst.cm.tools.db.script_handler.PrepareScriptHandler
ancil:
    class_name: lsst.cm.tools.db.script_handler.AncillaryScriptHandler
    collections:
        - u/elhoward/DM-38242/templates
        - HSC/calib
        - HSC/masks
        - HSC/raw/RC2/9813
        - refcats
        - skymaps
collect:
    class_name: lsst.cm.tools.db.script_handler.CollectScriptHandler
collect_step:
    class_name: lsst.cm.tools.db.script_handler.CollectStepScriptHandler
job:
    class_name: lsst.cm.tools.db.job_handler.JobHandler
workflow:
    class_name: lsst.cm.tools.db.workflow_handler.WorkflowHandler
    input_type: source
    output_type: run
    job_config: job
rescue_workflow:
    includes: ["workflow"]
    rescue: True
group:
    class_name: lsst.cm.tools.db.group_handler.GroupHandler
    input_type: source
    output_type: run
    workflow_config: workflow
step:
    class_name: lsst.cm.tools.db.step_handler.StepHandler
    input_type: source
    output_type: run
    group_config: group
    templates:
        coll_out: "{root_coll}/{production_name}/{campaign_name}/{step_name}"
    scripts:
        - collect_step
singleFrame:
    prerequisites: []
    includes: ["step"]
    pipeline_yaml: "${AP_PIPE_DIR}/pipelines/HyperSuprimeCam/ApPipe.yaml#isr..calibrate"
    data_query_base: "instrument = 'HSC' and skymap = 'hsc_rings_v1'"
    split_args:
        dataset: raw
        field: exposure
        min_queries: 2
diffim:
    prerequisites: ["singleFrame"]
    includes: ["step"]
    pipeline_yaml: "${AP_PIPE_DIR}/pipelines/HyperSuprimeCam/ApPipe.yaml#retrieveTemplate..diaPipe"
    data_query_base: "instrument = 'HSC' and skymap = 'hsc_rings_v1'"
    split_args:
        dataset: raw
        field: exposure
        min_queries: 2
campaign:
    class_name: lsst.cm.tools.db.campaign_handler.CampaignHandler
    root_coll: dummy
    input_type: tagged
    output_type: run
    data_query: "instrument='HSC' AND skymap='hsc_rings_v1' AND band IN ('g', 'r', 'i', 'z', 'y')"
    bps_yaml_template: "${CM_CONFIGS}/hsc_template.yaml"
    bps_script_template: "${CM_CONFIGS}/hsc_bps_template.sh"
    templates:
        coll_source: HSC/raw/RC2/9813
        coll_in: "{root_coll}/{production_name}/{campaign_name}_input"
        coll_out: "{root_coll}/{production_name}/{campaign_name}_output"
        coll_ancil: "{root_coll}/{production_name}/{campaign_name}_ancil"
    scripts:
        - ancil
        - prepare
        - collect
    steps:
        - singleFrame
        - diffim
